name: IOS Release

on:
  push:
    branches: [ "master" ]
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  ARCHITECTURE: ios

jobs:
  build-ios-release:
    runs-on: macos-13
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.16.3"
          channel: 'stable'

      - name: Download IOS App store connection private key
        id: app_store_connect_key
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: AuthKey_${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}.p8
          encodedString: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY_BASE64 }}

      - name: Download IOS App store certificate key
        id: app_store_certificate_key
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: certificate.p12
          encodedString: ${{ secrets.APP_STORE_CERTIFICATE_KEY_BASE64 }}

      - name: Install the Apple certificate and provisioning profile
        env:
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY_IDENTIFIER: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
          APP_STORE_CONNECT_PRIVATE_KEY_PATH: ${{ steps.app_store_connect_key.outputs.filePath }}
          APP_STORE_CERTIFICATE_KEY_PATH: ${{ steps.app_store_certificate_key.outputs.filePath }}
        run: |
          pip3 install codemagic-cli-tools
          keychain initialize
          keychain use-login
          app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) \
            --platform IOS \
            --type IOS_APP_STORE \
            --issuer-id=${{ env.APP_STORE_CONNECT_ISSUER_ID }} \
            --key-id=${{ env.APP_STORE_CONNECT_KEY_IDENTIFIER }} \
            --private-key=@file:${{ env.APP_STORE_CONNECT_PRIVATE_KEY_PATH }} \
            --certificate-key=@file:${{ env.APP_STORE_CERTIFICATE_KEY_PATH }} \
            --create
          keychain add-certificates

      - name: Start IOS release build ${{ github.ref_name }}
        run: |
          xcode-project use-profiles
          flutter packages pub get
          find . -name "Podfile" -execdir pod install \;
          flutter build ipa --export-options-plist=$HOME/export_options.plist
          keychain use-login

      - name: Upload IOS release to artifacts
        uses: actions/upload-artifact@v4
        id: upload_to_artifact
        with:
          name: cave-${{ github.ref_name }}-${{ env.ARCHITECTURE }}-release
          path: |
            build/**/*.ipa

      - name: Upload IOS release to App Store
        run: |
          ls build/ios