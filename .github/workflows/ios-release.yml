name: IOS Release

on:
  push:
    branches: [ "master" ]
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  ARCHITECTURE: ios

jobs:
  build-ios-release:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'widealpha/cave-forum'
          token: ${{ secrets.CAVE_REPO_TOKEN }}
          ref: ${{ github.ref_name }} #使用tag的name进行check

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.1"
          channel: 'stable'

      - name: Fetch tags
        run: git fetch --tags --force

      - name: Get current tag annotation
        id: tag_data
        uses: ericcornelissen/git-tag-annotation-action@v2
        with:
          tag: ${{ github.ref_name }}

      - name: Read flutter and version build name
        id: read_version
        run: |
          versionCode=$(grep -oE '^version:[[:space:]]*[0-9]+\.[0-9]+\.[0-9]+\+[0-9]+' pubspec.yaml | grep -oE '\+[0-9]+' | grep -oE '[0-9]+')
          versionName=$(grep -oE '^version:[[:space:]]*[0-9]+\.[0-9]+\.[0-9]+' pubspec.yaml | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          echo "versionCode=$versionCode" >> "$GITHUB_OUTPUT"
          echo "versionName=$versionName" >> "$GITHUB_OUTPUT"

      - name: Download App store connection private key
        id: app_store_connect_key
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: AuthKey.p8
          encodedString: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY_BASE64 }}

      - name: Download App store certificate key
        id: app_store_certificate_key
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: cert_key
          encodedString: ${{ secrets.APP_STORE_CERTIFICATE_KEY_BASE64 }}
      - name: Init code magic and App store code magic env
        env:
          ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          KEY_IDENTIFIER: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
          PRIVATE_KEY_PATH: ${{ steps.app_store_connect_key.outputs.filePath }}
        run: |
          pip3 install codemagic-cli-tools
          echo "APP_STORE_CONNECT_ISSUER_ID=${{ env.ISSUER_ID }}" >> $GITHUB_ENV
          echo "APP_STORE_CONNECT_KEY_IDENTIFIER=${{ env.KEY_IDENTIFIER }}" >> $GITHUB_ENV
          echo "APP_STORE_CONNECT_PRIVATE_KEY=@file:${{ env.PRIVATE_KEY_PATH }}" >> $GITHUB_ENV

      - name: Install the Apple certificate and provisioning profile
        env:
          APP_STORE_CERTIFICATE_KEY_PATH: ${{ steps.app_store_certificate_key.outputs.filePath }}
        run: |
          keychain initialize
          app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) \
            --platform=IOS \
            --type=IOS_APP_STORE \
            --certificate-key=@file:${{ env.APP_STORE_CERTIFICATE_KEY_PATH }} \
            --create
          keychain add-certificates

      - name: Check this version build already exist in apple store
        id: check_version
        run: |
          # 获取app id
          appId=$(app-store-connect apps list \
            --bundle-id-identifier=$(xcode-project detect-bundle-id) \
            --platform IOS | awk '/Id: / {print $2}')
          # 获取Build的信息
          builds=$(app-store-connect builds list \
            --app-id=$appId \
            --build-version-number=${{ steps.read_version.outputs.versionCode }})
          echo $builds
          if [[ $builds == *--\ Build\ --* ]]; then
            echo 'find version build already exist'
            result='false'
          else
            echo 'version build not exist'
            result='true'
          fi
          echo "uploadApp=${result}" >> "$GITHUB_OUTPUT"

      - name: Start IOS release build ${{ github.ref_name }}
        if: ${{ steps.check_version.outputs.uploadApp }}
        run: |
          xcode-project use-profiles
          flutter packages pub get
          find . -name "Podfile" -execdir pod install \;
          flutter build ipa --release --export-options-plist=$HOME/export_options.plist

      - name: Upload ipa to testflight
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          BETA_GROUP_NAME: ${{ secrets.BETA_GROUP_NAME }}
        run: |
          if [ "${{ steps.check_version.outputs.uploadApp }}" = "false" ]; then
            export APP_STORE_CONNECT_SKIP_PACKAGE_UPLOAD=true
          fi
          APP_FILE=$(find $(pwd) -name "*.ipa")
          app-store-connect publish \
            --path="$APP_FILE" \
            --locale=zh-Hans \
            --whats-new='${{ steps.tag_data.outputs.git-tag-annotation }}' \
            --beta-group=${{ env.BETA_GROUP_NAME }} \
            --testflight \
            --expire-build-submitted-for-review

      - name: Upload version to Server
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          VERSION_CODE: ${{ steps.read_version.outputs.versionCode }}
          VERSION_NAME: ${{ steps.read_version.outputs.versionName }}
          TAG_ANNOTATION: ${{ steps.tag_data.outputs.git-tag-annotation }}
        run: |
          curl -X POST \
          --data-urlencode versionCode="${{ env.VERSION_CODE }}" \
          --data-urlencode versionName="${{ env.VERSION_NAME }}" \
          --data-urlencode versionLog="${{ env.TAG_ANNOTATION }}" \
          --data-urlencode downloadLink="${{ secrets.TESTFLIGHT_BETA_LINK }}" \
          --data-urlencode auth="${{ secrets.SERVER_AUTH }}" \
          --data-urlencode appName="world-first-forum" \
          --data-urlencode flavor="prod" \
          --data-urlencode abi="${{ env.ARCHITECTURE }}" \
          ${{ secrets.SERVER_UPDATE_API }}


      - name: Reset to default login key chain
        run: |
          keychain use-login
